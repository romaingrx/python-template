on: [workflow_dispatch, push]

permissions:
  contents: write
  actions: write

jobs:
  initialize:
    runs-on: ubuntu-24.04
    if: ${{ github.repository != 'romaingrx/python-template' }}
    steps:
      - uses: actions/checkout@v4

      - name: "Get all variables"
        id: variables
        # Normalization taken from https://github.com/pypa/packaging/blob/3b20e0fd026f90c0f7094e083d09a70bef86d051/src/packaging/utils.py#L46
        run: |
          echo "project_name=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
          echo "project_description=${{ github.event.repository.description }}" >> $GITHUB_OUTPUT
          echo "python_project_name=$(echo ${{ github.event.repository.name }} | sed 's/[^a-zA-Z_]//g' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: "Replace template variables"
        env:
          project_name: ${{ steps.variables.outputs.project_name }}
          project_description: ${{ steps.variables.outputs.project_description }}
          python_project_name: ${{ steps.variables.outputs.python_project_name }}
        run: |
          files=$(git ls-files)
          for file in $files; do
            sed -i "s/__REPO_NAME__/${project_name}/g" "$file"
            sed -i "s/__REPO_DESCRIPTION__/${project_description}/g" "$file"
            sed -i "s/__PYTHON_PROJECT_NAME__/${python_project_name}/g" "$file"
            sed -i "/TEMPLATE_REMOVE_ME/d" "$file" # Remove the templating lines
          done

          # Move the actual project to the new name
          mv __REPO_NAME__ ${python_project_name}

          # Remove the template workflow file
          rm .github/workflows/initialize-template.yaml

      - name: "Commit changes"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "chore: initialize project from template"
          git push
